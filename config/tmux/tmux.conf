# ================================ Variables ==================================

tmux_bin="~/dotfiles/bin/tmux"
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
        | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# ================================== Options ==================================

# Index start from 1
set-option -g base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# History
set-option -g history-limit 30000

# Repeat time limit (ms)
set-option -g repeat-time 500

# Escape time
set-option -g escape-time 250

# Enable xterm keys
set-option -g xterm-keys on

# Key bindings in the status line (bind-key :)
set-option -g status-keys emacs

# Mouse
set-option -g mouse on

# Shell
set-option -g default-shell "/bin/bash"

# Terminal
set-option -g default-terminal "st-256color"

# True Color
set-option -ga terminal-overrides ",st-256color:Tc"

# Copy-mode
set-window-option -g mode-keys vi

# ================================= Key bindings ==============================

# Change bind key to ctrl-w
unbind-key c-b
set-option -g prefix c-w

# Select last window
bind-key c-w last-window

# C-W c to start copying
bind-key c copy-mode
# In copy mode v starts selection
bind-key -Tcopy-mode-vi 'v' send-keys -X begin-selection
# In copy mode V select the whole line
bind-key -Tcopy-mode-vi 'V' send-keys -X select-line
# In copy mode r toggle rectangle selection
bind-key -Tcopy-mode-vi 'r' send-keys -X rectangle-toggle
# In copy mode y copy selection to clipboard
bind-key -Tcopy-mode-vi 'y' send-keys -X copy-pipe 'xclip -sel clip'

# Unbind the default action first for MouseDragEnd1Pane
unbind -n -Tcopy-mode-vi MouseDragEnd1Pane
# Right click to paste from the clipboard
# If you like middle click better, change MouseDown3Pane to MouseDown2Pane for middle click.
unbind-key MouseDown3Pane
bind-key -n MouseDown3Pane run-shell "$tmux_bin set-buffer \"$(xclip -o -sel clipboard)\"; $tmux_bin paste-buffer"

# C-W Space show availables buffers
# Enter => paster after cursor
# q => cancel
bind-key Space run-shell "$tmux_bin choose-buffer"
# Paste from clipboard
bind-key P run-shell  "xclip -sel clipboard -o | $tmux_bin load-buffer - ; $tmux_bin paste-buffer"
# Paste from buffer
bind-key p paste-buffer

bind-key w send-prefix

bind-key a new-window -c "#{pane_current_path}"

bind-key h split-window -h -c "#{pane_current_path}"

bind-key v split-window -c "#{pane_current_path}"

# Moving windows
bind-key -r c-right resize-pane -R 10
bind-key -r c-left resize-pane -L 10
bind-key -r c-up resize-pane -U 10
bind-key -r c-down resize-pane -D 10

# Pane-movements
bind-key left run "($is_vim && $tmux_bin send-keys C-h) || \
  $tmux_bin select-pane -L"

bind-key down run "($is_vim && $tmux_bin send-keys C-j) || \
  $tmux_bin select-pane -D"

bind-key up run "($is_vim && $tmux_bin send-keys C-k) || \
  $tmux_bin select-pane -U"

bind-key right run "($is_vim && $tmux_bin send-keys C-l) || \
  $tmux_bin select-pane -R"

# Swap panes with tabs
bind-key tab swap-pane -U
bind-key btab swap-pane -D

# Synchronize panes
bind-key * set-window-option synchronize-pane

# Reload conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"

# ================================== Styling ==================================

set-option -g status "on"

# default statusbar colors
set-option -g status-bg "{{ colors.black }}"
set-option -g status-fg "{{ colors.white }}"

# panes
set -g pane-border-bg "{{ colors.black }}"
set -g pane-border-fg "{{ colors.dark_gray }}"
set -g pane-active-border-bg "{{ colors.black }}"
set -g pane-active-border-fg "{{ colors.cyan }}"

# status
set-option -g status-attr "none"
set-option -g status-justify "left"
set-option -g status-interval 60

# status left
set-option -g status-left-attr "none"
set-option -g status-left-length 80
set-option -g status-left ' #[bg={{ colors.gray }},fg={{ colors.black }},bold] #h '

# status right
set-option -g status-right-attr "none"
set-option -g status-right-length 80
set-option -g status-right '#[bg={{ colors.gray }},fg={{ colors.black }},bold] #(date "+%H:%M") #[bg={{ colors.black }}] '

# windows
set-window-option -g window-status-activity-attr "none"
set-window-option -g window-status-attr "none"
set-window-option -g window-status-separator ""
set-window-option -g window-status-format ' #[bg={{ colors.dark_gray }}] #I #[bg={{ colors.gray }},fg={{ colors.black }}] #W #[bg={{ colors.black }}]'
set-window-option -g window-status-current-format ' #[bg={{ colors.cyan }},fg={{ colors.black}}] #I #[bg={{ colors.gray }},fg={{ colors.black }}] #W #[bg={{ colors.black }}]'
